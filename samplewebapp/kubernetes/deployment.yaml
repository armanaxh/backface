apiVersion: apps/v1
kind: Deployment
metadata:
  name: samplewebapp
  labels:
    app: samplewebapp
spec:
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: samplewebapp
  template:
    metadata:
      name: samplewebapp
      labels:
        app: samplewebapp
    spec:
      containers:
      - image: IMAGE_NAME
        name: samplewebapp
        imagePullPolicy: Always # IfNotPresent
        ports:
        - name: http
          protocol: TCP
          containerPort: 8080
        resources:
          limits:
            cpu: 500m
            ephemeral-storage: 256Mi
            memory: 512Mi
          requests:
            cpu: 250m
            ephemeral-storage: 128Mi
            memory: 256Mi
        startupProbe: # TODO
          httpGet:
            path: /
            port: http
          failureThreshold: 30
          periodSeconds: 10
        readinessProbe: # TODO description DB and dependency 
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: http
          failureThreshold: 5
          periodSeconds: 10
        volumeMounts:
        - name: config-volume # hot reload after update
          mountPath: /opt/tomcat/conf/server.xml
          subPath: server.xml
      terminationGracePeriodSeconds: 20
      dnsPolicy: ClusterFirst
      # imagePullSecrets:
      # - name: private-registry-secret
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: samplewebapp
                topologyKey: kubernetes.io/hostname
              weight: 1
      volumes:
        - name: config-volume
          configMap:
            name: samplewebapp-tomcat
